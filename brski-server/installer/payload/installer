# #!/bin/bash

IF0="wlan0"
IF1="wlan1"
MAIN_NETWORK_INTERFACE="eth0"

CA_DIR="/etc/hostapd/CA"
CA_CONF="$CA_DIR/ca.conf"
COMBINED_CA_CRL="$CA_DIR/registrar-tls-ca_and_crl.crt"
CA_CERT="/etc/brski/registrar-tls-ca.crt"

ip a show dev $IF0

if [ $? -ne 0 ]; then
    echo "Couldn't find interface $IF0"
    exit 1
fi

ip a show dev $IF1

if [ $? -ne 0 ]; then
    echo "Couldn't find interface $IF1"
    exit 1
fi

# Configure BRSK tool
wget -O /tmp/brski_0.2.6_arm64.deb https://github.com/nqminds/brski/releases/download/0.2.6/brski_0.2.6_arm64.deb
dpkg -i /tmp/brski_0.2.6_arm64.deb
rm /tmp/brski_0.2.6_arm64.deb

cp certs/* /etc/brski
sudo chown freerad:freerad /etc/brski/registrar-tls.crt
sudo chown freerad:freerad /etc/brski/registrar-tls.key

mkdir -p /opt/demo-server
cp run.sh /opt/demo-server
cp link_bridges.sh /opt/demo-server/
cp assign_client_to_vlan.sh /opt/demo-server/

chmod +x /opt/demo-server/link_bridges.sh
chmod +x /opt/demo-server/assign_client_to_vlan.sh

cp nist-demo.service /etc/systemd/system/
chmod 644 /etc/systemd/system/nist-demo.service
cp configure-vlans.service /etc/systemd/system/
chmod 644 /etc/systemd/system/configure-vlans.service

systemctl daemon-reload

systemctl enable nist-demo.service
systemctl enable configure-vlans.service

# Insatll all packages
apt install hostapd dnsmasq iptables avahi-daemon vlan freeradius freeradius-mysql freeradius-utils
echo "8021q" | sudo tee -a /etc/modules

# Configure avahi
# Always enable
systemctl enable avahi-daemon.service
mkdir -p /etc/avahi/services
cp registrar.service /etc/avahi/services

service hostapd stop
service dnsmasq stop
systemctl disable dnsmasq

systemctl stop wpa_supplicant
systemctl disable wpa_supplicant

systemctl disable hostapd@$IF0.service 
systemctl disable hostapd@$IF1.service 

cp vlan-secure.vlan /etc/hostapd/
cp clients.conf /etc/freeradius/3.0/
cp eap /etc/freeradius/3.0/mods-available/

chown freerad:freerad /etc/freeradius/3.0/mods-available/eap
chmod 640 /etc/freeradius/3.0/mods-enabled/eap

chown freerad:freerad /etc/freeradius/3.0/clients.conf
chmod 640 /etc/freeradius/3.0/clients.conf

# secure hostapd
cp wlan-secure.conf /etc/hostapd/$IF1.conf
sed -i s/@wlan@/$IF1/g /etc/hostapd/$IF1.conf

file /etc/brski/registrar-tls-ca.crt
EAP_NAME=`openssl x509 -noout -issuer -in /etc/brski/registrar-tls-ca.crt | sed -e 's/.*CN = \(.*\).*/\1/'`
[[ -z "$EAP_NAME" ]] && { echo "Error: No EAP name found"; exit 1; }
sed -i s/@wifiname@/$EAP_NAME/g /etc/hostapd/$IF1.conf

cp eap_user /etc/hostapd

# open hostapd
cp wlan-open.conf /etc/hostapd/$IF0.conf
sed -i s/@wlan@/$IF0/g /etc/hostapd/$IF0.conf

cp dnsmasq-open.conf /etc/default/dnsmasq.$IF0
sed -i s/@wlan@/$IF0/g /etc/default/dnsmasq.$IF0

cp dnsmasq-secure.conf /etc/default/dnsmasq.$IF1
sed -i s/@wlan@/$IF1/g /etc/default/dnsmasq.$IF1

sudo mkdir -p "$CA_DIR/"
if [ $? -ne 0 ]; then
    echo "Failed to create directory: $CA_DIR/"
    exit 1
fi

cp ca.conf "$CA_DIR/"
touch "$CA_DIR/index.txt"
echo '1000' > "$CA_DIR/serial"
touch "$CA_DIR/crlnumber"
echo '01' > "$CA_DIR/crlnumber"

openssl ca -gencrl -out "$CA_DIR/crl.crt" -config "$CA_CONF"
sudo sh -c "cat $CA_CERT $CA_DIR/crl.crt > $COMBINED_CA_CRL"
chown freerad:freerad "$COMBINED_CA_CRL"

cp local_revoke_serial_multiple_args.sh "$CA_DIR/"
cp local_revoke.sh "$CA_DIR/"

sudo systemctl disable dnsmasq@$IF0.service
sudo systemctl disable dnsmasq@$IF1.service

# Enable IP forwarding
echo "net.ipv4.ip_forward=1" | sudo tee -a /etc/sysctl.conf
sudo sysctl -p

# Configure NAT and routing
sudo iptables -t nat -A POSTROUTING -o $MAIN_NETWORK_INTERFACE -j MASQUERADE
sudo iptables -A FORWARD -i $MAIN_NETWORK_INTERFACE -o $IF1 -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i $IF1 -o $MAIN_NETWORK_INTERFACE -j ACCEPT

# Save iptables rules
sudo iptables-save | sudo tee /etc/iptables/rules.v4

# Add routes for subnets
sudo ip route add 192.168.16.0/24 dev $IF1

# Uncomment to add more if needed, currently no internet access for 10, 20, 30, 40
# sudo ip route add 192.168.34.0/24 dev brvlan10
# sudo ip route add 192.168.35.0/24 dev brvlan20
# sudo ip route add 192.168.36.0/24 dev brvlan30
# sudo ip route add 192.168.37.0/24 dev brvlan40

# Restart the avahi service
systemctl restart avahi-daemon.service

# Start the runner
systemctl restart nist-demo.service
